generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  id       Int      @id @default(autoincrement())
  name     String   @db.VarChar(255)
  email    String   @unique @db.VarChar(255)
  password String   @db.VarChar(255)
  role     Role
  status   Boolean? @default(true)
}

model User {
  id                Int            @id @default(autoincrement())
  name              String
  email             String?        @unique @db.VarChar(255)
  telephone         String?
  bio               String?        @db.Text
  regional_pastor   String?
  gender            String?
  age_grade         String?
  category          String?
  type              String?
  number_of_members Int            @default(1)
  country           String?
  state             String?
  region            String?
  province          String?
  picture           String?
  date              DateTime?      @default(now())
  status            UserStatus     @default(registered)
  seasonId          Int            @default(1)
  Season            Season?        @relation(fields: [seasonId], references: [id])
  user_sessions     User_session[]
}

model Season {
  id             Int            @id @default(autoincrement())
  name           String
  status         Boolean        @default(true)
  current_season Settings[]
  user_sessions  User_session[]
  round          Round[]
  User           User[]
}

model Round {
  id            Int            @id @default(autoincrement())
  name          String
  qualifiers    Int?
  status        Boolean        @default(true)
  current_round Settings[]
  users         User_session[]
  Season        Season?        @relation(fields: [seasonId], references: [id])
  seasonId      Int?           @default(1)
}

model Settings {
  id             Int     @id @default(autoincrement())
  current_round  Int
  current_season Int     @default(2)
  status         Boolean @default(true)
  compiled       Boolean @default(false)
  competition    Int     @default(0)
  round          Round   @relation(fields: [current_round], references: [id])
  season         Season  @relation(fields: [current_season], references: [id])

  @@index([current_round], map: "current_id")
  @@index([current_season], map: "current_season")
}

model User_session {
  id           Int               @id @default(autoincrement())
  season_id    Int               @default(1)
  round_id     Int
  votes        Int               @default(0)
  score        Int               @default(0)
  user_id      Int
  judge_votes1 Int               @default(0)
  judge_votes2 Int               @default(0)
  judge_votes3 Int               @default(0)
  qualified    Boolean?
  status1      UserSessionStatus @default(pending)
  status2      UserSessionStatus @default(pending)
  status3      UserSessionStatus @default(pending)
  position     Int?
  parameters   Parameters[]
  round        Round             @relation(fields: [round_id], references: [id])
  user         User              @relation(fields: [user_id], references: [id])
  season       Season            @relation(fields: [season_id], references: [id])

  @@unique([user_id, round_id])
  @@index([user_id], map: "user_id")
  @@index([round_id], map: "round_id")
  @@index([season_id], map: "season_id")
}

model Parameters {
  id               Int          @id @default(autoincrement())
  judge            Int
  session_id       Int
  Delivery         Int          @default(0)
  Expression       Int          @default(0)
  Appearance       Int          @default(0)
  Communication    Int          @default(0)
  Technical_skills Int          @default(0)
  value            Int          @default(0)
  user_session     User_session @relation(fields: [session_id], references: [id])

  @@index([session_id], map: "session_id")
}

model logs {
  id          Int      @id @default(autoincrement())
  time        DateTime @default(now())
  action      String
  description String?  @db.Text
  amount      Int?
  candidate   String?
  session     String?
}

model RegionalPastor {
  id                                         Int      @id @default(autoincrement())
  region                                     String
  name                                       String
  state                                      String
  phone                                      String
  regional_shift_coordinator_name            String
  regional_shift_coordinator_phone           String
  assistant_regional_shift_coordinator_name  String?
  assistant_regional_shift_coordinator_phone String?
  createdAt                                  DateTime @default(now())
}

model ProvincialPastor {
  id                                 Int      @id @default(autoincrement())
  region                             String
  province                           String
  name                               String
  phone                              String
  provincial_shift_coordinator_name  String
  provincial_shift_coordinator_phone String
  createdAt                          DateTime @default(now())
}

enum Role {
  judge1
  judge2
  judge3
  admin
}

enum UserSessionStatus {
  voted
  skipped
  pending
}

enum UserStatus {
  registered
  approved
  disqualified
}
